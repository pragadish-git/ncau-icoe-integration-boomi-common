# This is a workflow to manage the build and deployment of Boomi packages across different environments

name: Boomi CICD - Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push for the "main", "develop-*", and "release-*" branches or pull request events for the "develop-*" branch
  push:
    branches:
      - "main"
      - "develop-**"
  #pull_request:
  #  branches:
  #    - "develop-**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        type: environment

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    if: (startsWith(github.event.ref,'refs/heads/main') || startsWith(github.event.ref,'refs/heads/develop-')) && github.event_name == 'push'
    # if: github.event_name == 'pull_request'

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Setting environment to Common to get boomi details for packaging
    environment: Development
    #  url: "http://dev.myapp.com"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Build packages for the deliverables
      - name: Set environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check packages file existence
        id: check_packages_file
        uses: andstor/file-existence-action@v1
        with:
          files: "packages.json"

      # - name: Check file existence
      #   id: check_extension_file
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: "extensions.json"

      # - name: Does extension file exists
      #   run: |
      #     echo '${{ steps.check_extension_file.outputs.files_exists }}'

      - name: Read file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "packages.json"

      - name: Update file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: update_contents
        run: |
          echo ::set-output name=FJSON::$(echo '{"components": '$(echo '${{ steps.read_file.outputs.contents }}')'}')

      - name: Package components # on ${{ github.event.inputs.environment }}
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: http_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          # url: 'https://c01-sg.integrate-test.boomi.com/ws/rest/cicdCreatePackagedComponent/v1/CicdPackagedComponent/'
          # url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/cicdCreatePackagedComponent/v1/CicdPackagedComponent/'
          url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/createCicdPackagedComponent'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: '${{ steps.update_contents.outputs.FJSON }}'
          timeout: 60000

      - name: Show response
        if: steps.check_packages_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_contents.outputs.FJSON }}'
          echo '${{ steps.http_call.outputs.response }}'

  DeployToDev:
    name: Deploy to Dev

    if: (startsWith(github.event.ref,'refs/heads/main') || startsWith(github.event.ref,'refs/heads/develop-')) && github.event.inputs.environment =='Development'
    # needs: [Build]
    runs-on: ubuntu-latest

    environment: Development
    #  url: "http://dev.myapp.com"

    steps:
      # Deploy packages to environment
      - name: Set environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check packages file existence
        id: check_packages_file
        uses: andstor/file-existence-action@v1
        with:
          files: "packages.json"

      - name: Read file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "packages.json"

      - name: Update file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: update_contents
        run: |
          echo ::set-output name=FJSON::$(echo '{"packages": '$(echo '${{ steps.read_file.outputs.contents }}')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke deployment api - ${{ github.event.inputs.environment }}
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: http_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          # url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/cicdCreateDeployedPackage/v2/CicdDeployedPackage/'
          url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/createCicdDeployedPackage'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: '${{ steps.update_contents.outputs.FJSON }}'
          timeout: 60000

      - name: Show deployment response
        if: steps.check_packages_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_contents.outputs.FJSON }}'
          echo '${{ steps.http_call.outputs.response }}'

      - name: Check extension file existence
        id: check_extension_file
        uses: andstor/file-existence-action@v1
        with:
          files: "extensions.json"

      - name: Read extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: read_extension_file
        uses: andstor/file-reader-action@v1
        with:
          path: "extensions.json"

      - name: Update extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: update_extension_file_contents
        run: |
          echo ::set-output name=FEJSON::$(echo '{"extensions": '$(echo '${{ steps.read_extension_file.outputs.contents }}' | perl -pe 's/\$([_A-Z]+)/$ENV{$1}/g')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke extension api - ${{ github.event.inputs.environment }}
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: http_extension_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/updateEnvironmentExtensions/v1/EnvironmentExtensions/"
          url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/updateEnvironmentExtensions"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: "${{ steps.update_extension_file_contents.outputs.FEJSON }}"
          timeout: 60000

      - name: Show extension response
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_extension_file_contents.outputs.FEJSON }}'
          echo '${{ steps.http_extension_call.outputs.response }}'

  DeployToSIT:
    name: Deploy to SIT

    if: (startsWith(github.event.ref,'refs/heads/main') || startsWith(github.event.ref,'refs/heads/develop-')) && github.event.inputs.environment =='SIT'
    # needs: [DeployToDev]
    runs-on: ubuntu-latest

    environment: SIT
    #  url: "http://sit.myapp.com"

    steps:
      # Deploy packages to environment
      - name: Set environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check packages file existence
        id: check_packages_file
        uses: andstor/file-existence-action@v1
        with:
          files: "packages.json"

      - name: Read file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "packages.json"

      - name: Update file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: update_contents
        run: |
          echo ::set-output name=FJSON::$(echo '{"packages": '$(echo '${{ steps.read_file.outputs.contents }}')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke deployment api - ${{ github.event.inputs.environment }}
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: http_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/createCicdDeployedPackage'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: '${{ steps.update_contents.outputs.FJSON }}'
          timeout: 60000

      - name: Show deployment response
        if: steps.check_packages_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_contents.outputs.FJSON }}'
          echo '${{ steps.http_call.outputs.response }}'

      - name: Check extension file existence
        id: check_extension_file
        uses: andstor/file-existence-action@v1
        with:
          files: "extensions.json"

      - name: Read extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: read_extension_file
        uses: andstor/file-reader-action@v1
        with:
          path: "extensions.json"

      - name: Update extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: update_extension_file_contents
        run: |
          echo ::set-output name=FEJSON::$(echo '{"extensions": '$(echo '${{ steps.read_extension_file.outputs.contents }}' | perl -pe 's/\$([_A-Z]+)/$ENV{$1}/g')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke extension api - ${{ github.event.inputs.environment }}
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: http_extension_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/updateEnvironmentExtensions"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: "${{ steps.update_extension_file_contents.outputs.FEJSON }}"
          timeout: 60000

      - name: Show extension response
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_extension_file_contents.outputs.FEJSON }}'
          echo '${{ steps.http_extension_call.outputs.response }}'

  DeployToUAT:
    name: Deploy to UAT

    if: (startsWith(github.event.ref,'refs/heads/main') || startsWith(github.event.ref,'refs/heads/develop-')) && github.event.inputs.environment =='UAT'
    # needs: [DeployToDev]
    runs-on: ubuntu-latest

    environment: UAT
    #  url: "http://sit.myapp.com"

    steps:
      # Deploy packages to environment
      - name: Set environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check packages file existence
        id: check_packages_file
        uses: andstor/file-existence-action@v1
        with:
          files: "packages.json"

      - name: Read file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "packages.json"

      - name: Update file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: update_contents
        run: |
          echo ::set-output name=FJSON::$(echo '{"packages": '$(echo '${{ steps.read_file.outputs.contents }}')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke deployment api - ${{ github.event.inputs.environment }}
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: http_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/createCicdDeployedPackage'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: '${{ steps.update_contents.outputs.FJSON }}'
          timeout: 60000

      - name: Show deployment response
        if: steps.check_packages_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_contents.outputs.FJSON }}'
          echo '${{ steps.http_call.outputs.response }}'

      - name: Check extension file existence
        id: check_extension_file
        uses: andstor/file-existence-action@v1
        with:
          files: "extensions.json"

      - name: Read extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: read_extension_file
        uses: andstor/file-reader-action@v1
        with:
          path: "extensions.json"

      - name: Update extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: update_extension_file_contents
        run: |
          echo ::set-output name=FEJSON::$(echo '{"extensions": '$(echo '${{ steps.read_extension_file.outputs.contents }}' | perl -pe 's/\$([_A-Z]+)/$ENV{$1}/g')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke extension api - ${{ github.event.inputs.environment }}
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: http_extension_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/updateEnvironmentExtensions"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: "${{ steps.update_extension_file_contents.outputs.FEJSON }}"
          timeout: 60000

      - name: Show extension response
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_extension_file_contents.outputs.FEJSON }}'
          echo '${{ steps.http_extension_call.outputs.response }}'

  DeployToProd:
  #   name: Deploy to Production
  #   if: github.event.ref == 'refs/heads/main' && github.event_name == 'push'
  
    name: Deploy to Production

    if: startsWith(github.event.ref,'refs/heads/main') && github.event.inputs.environment =='Production' && github.event_name == 'push'
    # needs: [DeployToDev]
    runs-on: ubuntu-latest

    environment: Production
    #  url: "http://sit.myapp.com"

    steps:
      # Deploy packages to environment
      - name: Set environment
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Check packages file existence
        id: check_packages_file
        uses: andstor/file-existence-action@v1
        with:
          files: "packages.json"

      - name: Read file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "packages.json"

      - name: Update file contents
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: update_contents
        run: |
          echo ::set-output name=FJSON::$(echo '{"packages": '$(echo '${{ steps.read_file.outputs.contents }}')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke deployment api - ${{ github.event.inputs.environment }}
        if: steps.check_packages_file.outputs.files_exists == 'true'
        id: http_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          url: 'https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/createCicdDeployedPackage'
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: '${{ steps.update_contents.outputs.FJSON }}'
          timeout: 60000

      - name: Show deployment response
        if: steps.check_packages_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_contents.outputs.FJSON }}'
          echo '${{ steps.http_call.outputs.response }}'

      - name: Check extension file existence
        id: check_extension_file
        uses: andstor/file-existence-action@v1
        with:
          files: "extensions.json"

      - name: Read extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: read_extension_file
        uses: andstor/file-reader-action@v1
        with:
          path: "extensions.json"

      - name: Update extension file contents
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: update_extension_file_contents
        run: |
          echo ::set-output name=FEJSON::$(echo '{"extensions": '$(echo '${{ steps.read_extension_file.outputs.contents }}' | perl -pe 's/\$([_A-Z]+)/$ENV{$1}/g')'}' | jq '. + {"environmentId": "${{ secrets.BOOMI_ENVIRONMENT_ID }}"}')

      - name: Invoke extension api - ${{ github.event.inputs.environment }}
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        id: http_extension_call
        uses: fjogeleit/http-request-action@v1.10.0
        with:
          # url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/rest/getComponentDetails/v1/ComponentDetails/"
          # method: "GET"
          # customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          url: "https://${{ secrets.BOOMI_SERVER_URL }}/ws/simple/updateEnvironmentExtensions"
          method: "POST"
          customHeaders: '{"Content-Type": "application/json", "Accept": "application/json", "Authorization": "Basic ${{ secrets.BOOMI_CLOUD_USER_TOKEN }}"}'
          data: "${{ steps.update_extension_file_contents.outputs.FEJSON }}"
          timeout: 60000

      - name: Show extension response
        # if: contains(steps.changed_files.outputs.modified_files, 'extensions.json')
        if: steps.check_extension_file.outputs.files_exists == 'true'
        run: |
          echo '${{ steps.update_extension_file_contents.outputs.FEJSON }}'
          echo '${{ steps.http_extension_call.outputs.response }}'
